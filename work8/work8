使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能

10 bytes

====== SET ======
  100000 requests completed in 1.50 seconds
  50 parallel clients
  10 bytes payload
  keep alive: 1

98.72% <= 1 milliseconds
99.87% <= 2 milliseconds
99.90% <= 3 milliseconds
100.00% <= 3 milliseconds
66577.90 requests per second

====== GET ======
  100000 requests completed in 1.49 seconds
  50 parallel clients
  10 bytes payload
  keep alive: 1

99.68% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
66979.23 requests per second


20 bytes
====== SET ======
  100000 requests completed in 1.48 seconds
  50 parallel clients
  20 bytes payload
  keep alive: 1

99.89% <= 1 milliseconds
100.00% <= 1 milliseconds
67385.45 requests per second

====== GET ======
  100000 requests completed in 1.53 seconds
  50 parallel clients
  20 bytes payload
  keep alive: 1

99.03% <= 1 milliseconds
99.79% <= 2 milliseconds
99.91% <= 3 milliseconds
100.00% <= 3 milliseconds
65530.80 requests per second


50 bytes
====== SET ======
  100000 requests completed in 1.48 seconds
  50 parallel clients
  20 bytes payload
  keep alive: 1

99.89% <= 1 milliseconds
100.00% <= 1 milliseconds
67385.45 requests per second

====== GET ======
  100000 requests completed in 1.53 seconds
  50 parallel clients
  20 bytes payload
  keep alive: 1

99.03% <= 1 milliseconds
99.79% <= 2 milliseconds
99.91% <= 3 milliseconds
100.00% <= 3 milliseconds
65530.80 requests per second

100 bytes
====== SET ======
  100000 requests completed in 1.49 seconds
  50 parallel clients
  100 bytes payload
  keep alive: 1

99.15% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
67024.13 requests per second

====== GET ======
  100000 requests completed in 1.50 seconds
  50 parallel clients
  100 bytes payload
  keep alive: 1

99.76% <= 1 milliseconds
99.90% <= 2 milliseconds
99.91% <= 3 milliseconds
100.00% <= 3 milliseconds
66622.25 requests per second


200 bytes
====== SET ======
  100000 requests completed in 1.50 seconds
  50 parallel clients
  200 bytes payload
  keep alive: 1

99.29% <= 1 milliseconds
99.87% <= 2 milliseconds
99.94% <= 3 milliseconds
99.95% <= 4 milliseconds
100.00% <= 5 milliseconds
100.00% <= 5 milliseconds
66533.60 requests per second

====== GET ======
  100000 requests completed in 1.54 seconds
  50 parallel clients
  200 bytes payload
  keep alive: 1

98.92% <= 1 milliseconds
99.93% <= 2 milliseconds
100.00% <= 2 milliseconds
65061.81 requests per second


1024 bytes
====== SET ======
  100000 requests completed in 1.51 seconds
  50 parallel clients
  1024 bytes payload
  keep alive: 1

99.01% <= 1 milliseconds
99.89% <= 2 milliseconds
99.99% <= 3 milliseconds
100.00% <= 3 milliseconds
66181.34 requests per second

====== GET ======
  100000 requests completed in 1.55 seconds
  50 parallel clients
  1024 bytes payload
  keep alive: 1

99.17% <= 1 milliseconds
99.85% <= 2 milliseconds
99.92% <= 3 milliseconds
100.00% <= 3 milliseconds
64474.53 requests per second


5k
====== SET ======
  100000 requests completed in 1.60 seconds
  50 parallel clients
  5120 bytes payload
  keep alive: 1

98.61% <= 1 milliseconds
99.84% <= 2 milliseconds
99.92% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
62578.22 requests per second

====== GET ======
  100000 requests completed in 1.71 seconds
  50 parallel clients
  5120 bytes payload
  keep alive: 1

98.51% <= 1 milliseconds
99.77% <= 2 milliseconds
99.91% <= 3 milliseconds
99.95% <= 4 milliseconds
99.98% <= 5 milliseconds
100.00% <= 5 milliseconds
58377.11 requests per second


写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间。


